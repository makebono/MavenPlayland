<?xml version="1.0" encoding="UTF-8"?>
<!-- Put annotation scan and bean registry down different file, or web.xml will load all stuffs twice. -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
    xsi:schemaLocation="http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd   
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd   
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-4.0.xsd   
        http://www.springframework.org/schema/mvc   
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd   
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://code.alibabatech.com/schema/dubbo        
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd">     
        
    <!-- Customized initialzation and destruction control -->
    <bean class="com.makebono.mavenplayland.module_test.common.system.InitializationAndDestructionManager" 
        init-method="bonoInit" destroy-method="bonoDestroy"></bean>      

    <!-- Bind specific HandlerInterceptorAdapter to a certain path -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/interceptorTest/*" />
            <ref bean="bonoInterceptorHandler" />
        </mvc:interceptor>    
    </mvc:interceptors>    
    
    <!-- Put bean delegation down Servlet dispatcher or they would not be reloaded when application context refreshed. -->    
    <mvc:annotation-driven />
    <!-- <context:annotation-config></context:annotation-config> -->
    
    <dubbo:annotation package="
    com.makebono.mavenplayland.module_test.module" />
        
    <context:component-scan base-package="com.makebono.mavenplayland.module_test.module.controller,
        com.makebono.mavenplayland.module_test.module.service,
        com.makebono.mavenplayland.module_test.common.service,
        com.makebono.mavenplayland.module_test.common.annotations,
        com.makebono.mavenplayland.module_test.common.system.aopaspect,
        com.makebono.mavenplayland.module_test.common.listener" >
    <!-- scan for classes annotated as service or controller -->    
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
        <context:include-filter type="annotation" expression="org.aspectj.lang.annotation.Aspect"/>
        <context:exclude-filter type="annotation" expression="com.makebono.mavenplayland.module_test.common.annotations.DontAutowireMe"/>
    </context:component-scan>       
</beans>  